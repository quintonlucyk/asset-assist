{"version":3,"sources":["tabs/QuintonContent.tsx","components/AverageYild.tsx","components/EllenTable.tsx","tabs/EllenContent.tsx","constants.ts","requests/historicalData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["QuintonContent","AverageYild","used","rows","rowsExcluded","calcYild","excl","yildNum","forEach","row","i","includes","parseFloat","yild","length","avgYildNum","message","Typography","variant","className","toFixed","emptyArray","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","warning","light","body","padding","TableCell","StyledTableRow","root","action","hover","TableRow","EllenTable","header","React","setRowsExcluded","TableContainer","Table","TableHead","align","TableBody","map","date","dividend","share","Checkbox","defaultChecked","onChange","e","currentTarget","checked","filter","num","handleCheckboxChange","id","color","createData","EllenContent","data","isLoading","isError","lowYildRows","setLowYildRows","highYildRows","setHighYildRows","nextLowRows","nextHighRows","prices","entry","type","found","amount","low","high","push","moment","format","CircularProgress","fetchHistoricalData","key","symbol","a","RAPIDAPI_KEY","process","fetch","method","headers","res","json","queryCache","QueryCache","App","useState","input","setInput","setSymbol","useQuery","enabled","refetch","handleInputChange","event","value","handleSubmit","preventDefault","path","render","location","Tabs","pathname","indicatorColor","textColor","centered","Tab","label","component","Link","to","noValidate","autoComplete","onSubmit","TextField","name","placeholder","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f0dbc42.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nconst QuintonContent: React.FC = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default QuintonContent;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { RowInterface } from \"../tabs/EllenContent\";\r\n\r\ninterface AverageYildProps {\r\n  used: boolean;\r\n  rows: RowInterface[];\r\n  rowsExcluded: number[];\r\n}\r\n\r\nconst AverageYild: React.FC<AverageYildProps> = ({\r\n  used,\r\n  rows,\r\n  rowsExcluded,\r\n}) => {\r\n  const calcYild = (excl: number[]) => {\r\n    let yildNum = 0;\r\n    rows.forEach((row, i) => {\r\n      if (!rowsExcluded.includes(i)) {\r\n        yildNum += parseFloat(row.yild);\r\n      }\r\n    });\r\n    return yildNum / (rows.length - excl.length);\r\n  };\r\n\r\n  const avgYildNum = used ? calcYild(rowsExcluded) : calcYild([]);\r\n  const message = used ? \"Used Yield: \" : \"Average Yield: \";\r\n  return (\r\n    <Typography variant=\"subtitle2\">\r\n      <div className=\"spaceBetween\">\r\n        <div>{message}</div>\r\n        <div>{avgYildNum.toFixed(4) + \" %\"}</div>\r\n      </div>\r\n    </Typography>\r\n  );\r\n};\r\nexport default AverageYild;\r\n","import * as React from \"react\";\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport { RowInterface } from \"../tabs/EllenContent\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport \"./EllenTable.css\";\r\nimport AverageYild from \"./AverageYild\";\r\n\r\ninterface EllenTableProps {\r\n  header: string;\r\n  rows: RowInterface[];\r\n}\r\n\r\nconst emptyArray: number[] = [];\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.warning.light,\r\n    },\r\n    body: {\r\n      padding: 5,\r\n    },\r\n  })\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  })\r\n)(TableRow);\r\n\r\nconst EllenTable: React.FC<EllenTableProps> = ({ header, rows }) => {\r\n  const [rowsExcluded, setRowsExcluded] = React.useState<number[]>([]);\r\n\r\n  const handleCheckboxChange = (\r\n    e: React.SyntheticEvent<HTMLInputElement>,\r\n    i: number\r\n  ) => {\r\n    if (e.currentTarget.checked && rowsExcluded.includes(i)) {\r\n      setRowsExcluded(rowsExcluded.filter((num) => num !== i));\r\n    } else if (!e.currentTarget.checked && !rowsExcluded.includes(i)) {\r\n      setRowsExcluded([...rowsExcluded, i]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tableContainer\">\r\n      <h4>{header}</h4>\r\n      <div className=\"custFlex\">\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>Date </StyledTableCell>\r\n                <StyledTableCell align=\"right\">Dividend</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Share</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Yield</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Included</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <StyledTableRow key={row.date}>\r\n                  <StyledTableCell>{row.date}</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {\"$ \" + row.dividend}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {\"$ \" + row.share}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    {row.yild + \" %\"}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">\r\n                    <Checkbox\r\n                      defaultChecked\r\n                      onChange={(e) => handleCheckboxChange(e, row.id)}\r\n                      color=\"primary\"\r\n                    />\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"yildCalcs\">\r\n          <AverageYild used={false} rowsExcluded={emptyArray} rows={rows} />\r\n          <AverageYild used={true} rowsExcluded={rowsExcluded} rows={rows} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EllenTable;\r\n","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { DIVIDEND } from \"../constants\";\r\nimport EllenTable from \"../components/EllenTable\";\r\n\r\nfunction createData(\r\n  id: number,\r\n  date: string,\r\n  dividend: string,\r\n  share: string,\r\n  yild: string\r\n) {\r\n  return { id, date, dividend, share, yild };\r\n}\r\n\r\ninterface DataInterface {\r\n  prices?: [\r\n    {\r\n      date?: number;\r\n      open?: number;\r\n      high?: number;\r\n      low?: number;\r\n      close?: number;\r\n      volume?: number;\r\n      adjclose?: number;\r\n      amount?: number;\r\n      type?: string;\r\n      // data?: number; Too similar to date\r\n    }\r\n  ];\r\n}\r\nexport interface RowInterface {\r\n  id: number;\r\n  date: string;\r\n  dividend: string;\r\n  share: string;\r\n  yild: string;\r\n}\r\n\r\ninterface Props {\r\n  data: DataInterface;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n}\r\n\r\nconst EllenContent: React.FC<Props> = React.memo(\r\n  ({ data, isLoading, isError }) => {\r\n    const [lowYildRows, setLowYildRows] = React.useState<RowInterface[]>([]);\r\n    const [highYildRows, setHighYildRows] = React.useState<RowInterface[]>([]);\r\n\r\n    React.useEffect(() => {\r\n      let nextLowRows: RowInterface[] = [];\r\n      let nextHighRows: RowInterface[] = [];\r\n      data?.prices?.forEach((entry, i, prices) => {\r\n        if (entry.type === DIVIDEND) {\r\n          let found = null;\r\n          if (i > 0 && prices[i - 1].date === entry.date) {\r\n            found = -1;\r\n          } else if (\r\n            i < prices.length - 1 &&\r\n            prices[i - 1].date === entry.date\r\n          ) {\r\n            found = +1;\r\n          }\r\n\r\n          if (\r\n            found !== null &&\r\n            !!entry.date &&\r\n            !!entry.amount &&\r\n            !!prices[i + found].low &&\r\n            !!prices[i + found].high\r\n          ) {\r\n            nextLowRows.push(\r\n              createData(\r\n                nextLowRows.length,\r\n                moment(entry.date * 1000).format(\"MMM DD YYYY\"),\r\n                entry.amount.toFixed(4),\r\n                prices[i + found].high!.toFixed(4),\r\n                ((entry.amount! / prices[i + found].high!) * 100).toFixed(4)\r\n              )\r\n            );\r\n\r\n            nextHighRows.push(\r\n              createData(\r\n                nextHighRows.length,\r\n                moment(entry.date * 1000).format(\"MMM DD YYYY\"),\r\n                entry.amount.toFixed(4),\r\n                prices[i + found].low!.toFixed(4),\r\n                ((entry.amount! / prices[i + found].low!) * 100).toFixed(4)\r\n              )\r\n            );\r\n          }\r\n        }\r\n      });\r\n      setLowYildRows(nextLowRows);\r\n      setHighYildRows(nextHighRows);\r\n    }, [data]);\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"center\">\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (isError) {\r\n      return (\r\n        <div className=\"center\">Sorry, we have experienced an error...</div>\r\n      );\r\n    }\r\n    if (!!data) {\r\n      return (\r\n        <>\r\n          <EllenTable header=\"Low Yield\" rows={lowYildRows} />\r\n          <EllenTable header=\"High Yield\" rows={highYildRows} />\r\n        </>\r\n      );\r\n    }\r\n    return <div className=\"center\">No data loaded/available.</div>;\r\n  }\r\n);\r\n\r\nexport default EllenContent;\r\n","export const HISTORICAL_DATA = \"historicalData\";\r\n\r\nexport const DIVIDEND = \"DIVIDEND\";\r\n","import { SampleAppleData } from \"../sample-responses/AppleData\";\r\nimport { SampleATATData } from \"../sample-responses/ATATData\";\r\n\r\nconst inDev = !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const fetchHistoricalData = async (key: string, symbol: string) => {\r\n  const RAPIDAPI_KEY = process.env.REACT_APP_RAPIDAPI_KEY || \"\";\r\n\r\n  if (!symbol) {\r\n    return {};\r\n  }\r\n  try {\r\n    if (inDev) {\r\n      return Math.floor(Math.random() * 10 + 1) % 2 === 0\r\n        ? SampleAppleData\r\n        : SampleATATData;\r\n    }\r\n\r\n    const res = await fetch(\r\n      `https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v3/get-historical-data?symbol=${symbol}&region=US`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\": RAPIDAPI_KEY,\r\n          \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return await res.json();\r\n  } catch (e) {\r\n    return e;\r\n  } finally {\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Tabs, Tab, TextField, Button } from \"@material-ui/core\";\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useQuery, QueryCache, ReactQueryCacheProvider } from \"react-query\";\r\nimport QuintonContent from \"./tabs/QuintonContent\";\r\nimport EllenContent from \"./tabs/EllenContent\";\r\nimport \"./App.css\";\r\nimport { fetchHistoricalData } from \"./requests/historicalData\";\r\nimport { HISTORICAL_DATA } from \"./constants\";\r\n\r\nconst queryCache = new QueryCache();\r\n\r\nexport default function App() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [symbol, setSymbol] = React.useState(\"\");\r\n  const { data, isLoading, isError, refetch } = useQuery(\r\n    [HISTORICAL_DATA, symbol],\r\n    fetchHistoricalData,\r\n    { enabled: false }\r\n  );\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setInput(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setSymbol(input);\r\n    refetch();\r\n  };\r\n\r\n  return (\r\n    <ReactQueryCacheProvider queryCache={queryCache}>\r\n      <Router>\r\n        <Route\r\n          path=\"/\"\r\n          render={({ location }) => (\r\n            <>\r\n              <Tabs\r\n                value={location.pathname === \"/ellen\" ? 1 : 0}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n              >\r\n                <Tab label=\"Quinton\" component={Link} to=\"/\" />\r\n                <Tab label=\"Ellen\" component={Link} to=\"/ellen\" />\r\n              </Tabs>\r\n              <div className=\"symbolInput\">\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    onChange={handleInputChange}\r\n                    name=\"symbolInput\"\r\n                    placeholder=\"Symbol\"\r\n                  />\r\n                  <Button type=\"submit\">Search</Button>\r\n                </form>\r\n              </div>\r\n              <Switch>\r\n                <Route\r\n                  path=\"/ellen\"\r\n                  render={() => (\r\n                    <EllenContent\r\n                      data={data}\r\n                      isLoading={isLoading}\r\n                      isError={isError}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route path=\"/\" render={() => <QuintonContent />} />\r\n              </Switch>\r\n            </>\r\n          )}\r\n        />\r\n      </Router>\r\n    </ReactQueryCacheProvider>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}