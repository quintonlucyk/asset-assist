{"version":3,"sources":["tabs/QuintonContent.tsx","constants.ts","tabs/EllenContent.tsx","requests/historicalData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["QuintonContent","BASE_PATH","EllenContent","React","data","isLoading","isError","rows","setRows","nextRows","prices","forEach","entry","i","type","found","date","length","amount","low","high","push","moment","format","dividend","toFixed","lowShare","highYield","highShare","lowYield","className","CircularProgress","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","component","scope","fetchHistoricalData","key","symbol","a","RAPIDAPI_KEY","process","fetch","method","headers","res","json","queryCache","QueryCache","App","useState","input","setInput","setSymbol","useQuery","enabled","handleInputChange","event","currentTarget","value","handleSubmit","e","preventDefault","path","render","location","Tabs","pathname","indicatorColor","textColor","centered","Tab","label","Link","to","noValidate","autoComplete","onSubmit","TextField","onChange","name","placeholder","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b04b0cb.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nconst QuintonContent: React.FC = () => {\r\n  return <div>QuintonContent</div>;\r\n};\r\n\r\nexport default QuintonContent;\r\n","export const HISTORICAL_DATA = \"historicalData\";\r\n\r\nexport const DIVIDEND = \"DIVIDEND\";\r\n\r\nexport const BASE_PATH = \"/asset-assist\";\r\n","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport \"./EllenContent.css\";\r\nimport { DIVIDEND } from \"../constants\";\r\n\r\nfunction createData(\r\n  date: string,\r\n  dividend: string,\r\n  lowShare: string,\r\n  highYield: string,\r\n  highShare: string,\r\n  lowYield: string\r\n) {\r\n  return { date, dividend, lowShare, highYield, highShare, lowYield };\r\n}\r\n\r\ninterface DataInterface {\r\n  prices?: [\r\n    {\r\n      date?: number;\r\n      open?: number;\r\n      high?: number;\r\n      low?: number;\r\n      close?: number;\r\n      volume?: number;\r\n      adjclose?: number;\r\n      amount?: number;\r\n      type?: string;\r\n      // data?: number; Too similar to date\r\n    }\r\n  ];\r\n}\r\ninterface RowInterface {\r\n  date: string;\r\n  dividend: string;\r\n  lowShare: string;\r\n  highYield: string;\r\n  highShare: string;\r\n  lowYield: string;\r\n}\r\n\r\ninterface Props {\r\n  data: DataInterface;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n}\r\n\r\nconst EllenContent: React.FC<Props> = React.memo(\r\n  ({ data, isLoading, isError }) => {\r\n    const [rows, setRows] = React.useState<RowInterface[]>([]);\r\n\r\n    React.useEffect(() => {\r\n      let nextRows: RowInterface[] = [];\r\n      data?.prices?.forEach((entry, i, prices) => {\r\n        if (entry.type === DIVIDEND) {\r\n          let found = null;\r\n          if (i > 0 && prices[i - 1].date === entry.date) {\r\n            found = -1;\r\n          } else if (\r\n            i < prices.length - 1 &&\r\n            prices[i - 1].date === entry.date\r\n          ) {\r\n            found = +1;\r\n          }\r\n\r\n          if (\r\n            found !== null &&\r\n            !!entry.date &&\r\n            !!entry.amount &&\r\n            !!prices[i + found].low &&\r\n            !!prices[i + found].high\r\n          ) {\r\n            nextRows.push(\r\n              createData(\r\n                moment(entry.date * 1000).format(\"MMM DD YYYY\"),\r\n                \"$ \" + entry.amount.toFixed(4),\r\n                \"$ \" + prices[i + found].low!.toFixed(4),\r\n                ((entry.amount! / prices[i + found].low!) * 100).toFixed(4) +\r\n                  \" %\",\r\n                \"$ \" + prices[i + found].high!.toFixed(4),\r\n                ((entry.amount! / prices[i + found].high!) * 100).toFixed(4) +\r\n                  \" %\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n      });\r\n      setRows(nextRows);\r\n    }, [data]);\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div className=\"center\">\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (isError) {\r\n      return (\r\n        <div className=\"center\">Sorry, we have experienced an error...</div>\r\n      );\r\n    }\r\n    if (!!data) {\r\n      return (\r\n        <>\r\n          {/* <pre>{JSON.stringify(data, null, 4)}</pre> */}\r\n          <TableContainer className=\"tableContainer\">\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date </TableCell>\r\n                  <TableCell align=\"right\">Dividend</TableCell>\r\n                  <TableCell align=\"right\">Low Share</TableCell>\r\n                  <TableCell align=\"right\">High Yield</TableCell>\r\n                  <TableCell align=\"right\">High Share</TableCell>\r\n                  <TableCell align=\"right\">Low Yield</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map((row) => (\r\n                  <TableRow key={row.date}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.date}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.dividend}</TableCell>\r\n                    <TableCell align=\"right\">{row.lowShare}</TableCell>\r\n                    <TableCell align=\"right\">{row.highYield}</TableCell>\r\n                    <TableCell align=\"right\">{row.highShare}</TableCell>\r\n                    <TableCell align=\"right\">{row.lowYield}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      );\r\n    }\r\n    return <div className=\"center\">No data available...</div>;\r\n  }\r\n);\r\n\r\nexport default EllenContent;\r\n","import { SampleAppleData } from \"../sample-responses/AppleData\";\r\nimport { SampleATATData } from \"../sample-responses/ATATData\";\r\n\r\nconst inDev = !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\nexport const fetchHistoricalData = async (key: string, symbol: string) => {\r\n  const RAPIDAPI_KEY = process.env.REACT_APP_RAPIDAPI_KEY || \"\";\r\n\r\n  if (!symbol) {\r\n    return {};\r\n  }\r\n  try {\r\n    if (inDev) {\r\n      return Math.floor(Math.random() * 10 + 1) % 2 === 0\r\n        ? SampleAppleData\r\n        : SampleATATData;\r\n    }\r\n\r\n    const res = await fetch(\r\n      `https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v3/get-historical-data?symbol=${symbol}&region=US`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\": RAPIDAPI_KEY,\r\n          \"x-rapidapi-host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return await res.json();\r\n  } catch (e) {\r\n    return e;\r\n  } finally {\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Tabs, Tab, TextField, Button } from \"@material-ui/core\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useQuery, QueryCache, ReactQueryCacheProvider } from \"react-query\";\r\nimport QuintonContent from \"./tabs/QuintonContent\";\r\nimport EllenContent from \"./tabs/EllenContent\";\r\nimport \"./App.css\";\r\nimport { fetchHistoricalData } from \"./requests/historicalData\";\r\nimport { BASE_PATH, HISTORICAL_DATA } from \"./constants\";\r\n\r\nconst queryCache = new QueryCache();\r\n\r\nexport default function App() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [symbol, setSymbol] = React.useState(\"\");\r\n  const { data, isLoading, isError } = useQuery(\r\n    [HISTORICAL_DATA, symbol],\r\n    fetchHistoricalData,\r\n    { enabled: !!symbol }\r\n  );\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setInput(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setSymbol(input);\r\n  };\r\n\r\n  return (\r\n    <ReactQueryCacheProvider queryCache={queryCache}>\r\n      <Router>\r\n        <Route\r\n          path=\"/\"\r\n          render={({ location }) => (\r\n            <>\r\n              <Tabs\r\n                value={location.pathname === BASE_PATH + \"/ellen\" ? 1 : 0}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                centered\r\n              >\r\n                <Tab label=\"Quinton\" component={Link} to={BASE_PATH + \"/\"} />\r\n                <Tab label=\"Ellen\" component={Link} to={BASE_PATH + \"/ellen\"} />\r\n              </Tabs>\r\n              <div className=\"symbolInput\">\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    onChange={handleInputChange}\r\n                    name=\"symbolInput\"\r\n                    placeholder=\"Symbol\"\r\n                  />\r\n                  <Button type=\"submit\">Search</Button>\r\n                </form>\r\n              </div>\r\n              <Switch>\r\n                <Route\r\n                  path={BASE_PATH + \"/ellen\"}\r\n                  render={() => (\r\n                    <EllenContent\r\n                      data={data}\r\n                      isLoading={isLoading}\r\n                      isError={isError}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path={BASE_PATH + \"/\"}\r\n                  render={() => <QuintonContent />}\r\n                />\r\n                <Redirect to={BASE_PATH + \"/\"} />\r\n              </Switch>\r\n            </>\r\n          )}\r\n        />\r\n      </Router>\r\n    </ReactQueryCacheProvider>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}